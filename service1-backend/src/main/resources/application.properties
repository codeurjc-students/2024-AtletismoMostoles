# ========================================
#          APLICACIÓN Y LOGS
# ========================================
spring.application.name=Service1-backend
spring.mustache.suffix=.html
springdoc.api-docs.path=/api-docs

# (Opcional) Ajusta niveles de log si necesitas debug
# logging.level.org.springframework.web=DEBUG
# logging.level.org.springframework=DEBUG
# logging.level.org.hibernate.SQL=DEBUG

# ========================================
#     CONFIGURACIÓN DE LA BASE DE DATOS
# ========================================
# En este microservicio solo usas la BD de usuarios, atletas, coaches, disciplines, equipment, roles…
spring.datasource.url=jdbc:mysql://localhost:3306/bd_servicio1
spring.datasource.username=root
spring.datasource.password=29042002Sa
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

# Hibernate / JPA
spring.jpa.database-platform=org.hibernate.dialect.MySQLDialect
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true

# ========================================
#        CONFIGURACIÓN DE RABBITMQ
# ========================================
spring.rabbitmq.host=localhost
spring.rabbitmq.port=5672
spring.rabbitmq.username=guest
spring.rabbitmq.password=guest

# ========================================
#    CONFIGURACIÓN DE gRPC (cliente)
# ========================================
grpc.client.servicio2.address=localhost:9092
grpc.client.servicio3.address=localhost:9093

# ========================================
#    CONFIGURACIÓN DE SERVIDOR WEB
# ========================================
# Si quieres seguir usando HTTPS como en el monolito:
server.port=443
server.ssl.enabled=true
server.ssl.key-store=classpath:keystore.p12
server.ssl.key-store-password=29042002Sa
server.ssl.key-store-type=PKCS12
server.ssl.key-alias=springboot

# Si prefieres arrancar HTTP puro en local (por ejemplo, para pruebas), sustituye lo anterior por:
# server.port=8080
# server.ssl.enabled=false

# ========================================
#     CONFIGURACIÓN DE JWT (igual que monolito)
# ========================================
jwt.secret=8YuUsOHB8mscNuh8aUsoCJTpfr5XMfcP+BBs/Se38N4=

# Usuarios/Admin (tal cual los tenías):
security.admin=admin
security.adminPasword=adminpass
security.user1=user1
security.password1=passuser1

# ========================================
#  CONFIGURACIÓN PARA SERVIR ANGULAR DESDE ESTE SERVICIO
# ========================================
# Si tu proyecto sigue sirviendo la carpeta /static (contenido de Angular compilado) igual que antes:
spring.web.resources.static-locations=classpath:/static/
spring.mvc.view.prefix=/static/
spring.mvc.view.suffix=.html
spring.mvc.static-path-pattern=/**
spring.web.resources.add-mappings=true
